// const path = require('path');

module.exports = {
  root: true,
  overrides: [
    {
      files: ['*.ts', '*.js'],
      parserOptions: {
        project: [
          // 'tsconfig.*?.json',
          // "e2e/tsconfig.json"
        ],
        createDefaultProgram: true,
      },
      extends: [
        'plugin:@angular-eslint/recommended',
        'airbnb-base',
        'prettier',
        'plugin:prettier/recommended',
      ],
      // settings: {
      //   'import/resolver': {
      //     webpack: {
      //       config: {
      //         resolve: {
      //           alias: {
      //             '~': path.join(__dirname, 'src/app'),
      //           },
      //           extensions: ['.js', '.jsx', '.ts', '.tsx', '.mjs'],
      //         },
      //       },
      //     },
      //   },
      // },
      rules: {
        'prettier/prettier': [
          'error',
          {
            singleQuote: true,
            endOfLine: 'auto',
            quoteProps: 'consistent',
            printWidth: 100,
            semi: true,
          },
        ],
        'object-literal-key-quotes': 'off',
        '@typescript-eslint/member-ordering': [
          'error',
          {
            default: [
              'public-static-field',
              'protected-static-field',
              'private-static-field',
              'public-instance-field',
              'protected-instance-field',
              'private-instance-field',
              'constructor',
              'public-static-method',
              'protected-static-method',
              'private-static-method',
              'public-instance-method',
              'protected-instance-method',
              'private-instance-method',
            ],
          },
        ],
        '@typescript-eslint/member-delimiter-style': [
          'error',
          {
            multiline: {
              delimiter: 'semi', // 'none' or 'semi' or 'comma'
              requireLast: true,
            },
          },
        ],
        'no-console': ['error', { allow: ['warn', 'error'] }],
        'no-underscore-dangle': 0,
        'no-param-reassign': [2, { props: false }],
        'lines-between-class-members': 'off',
        'linebreak-style': 'off',
        // '@typescript-eslint/semi': ['error'],
        'no-multiple-empty-lines': 'off',
        'no-useless-constructor': 'off',
        'quote-props': 'off',
        'import/prefer-default-export': 'off',
        'max-classes-per-file': 'off',
        'class-methods-use-this': 'off',
        'import/no-unresolved': 'off',
        'no-unused-vars': 'off',
        'no-nested-ternary': 'off',
        'no-undef': 'off',
        'no-empty-function': 'off',
        'no-trailing-spaces': 'off',
        'import/extensions': 'off',
        //   [
        //   'error',
        //   'ignorePackages',
        //   {
        //     js: 'never',
        //     jsx: 'never',
        //     ts: 'never',
        //     tsx: 'never',
        //     mjs: 'never',
        //   },
        // ],
        // 'import/extensions': [
        //   'error',
        //   'ignorePackages',
        //   {
        //     js: 'never',
        //     jsx: 'never',
        //     ts: 'never',
        //     tsx: 'never',
        //   },
        // ],
        // 'constructor-super': 'error',
        // 'for-direction': 'error',
        // 'getter-return': 'error',
        // 'no-async-promise-executor': 'error',
        // 'no-case-declarations': 'error',
        // 'no-class-assign': 'error',
        // 'no-compare-neg-zero': 'error',
        // 'no-cond-assign': 'error',
        // 'no-const-assign': 'error',
        // 'no-constant-condition': 'error',
        // 'no-control-regex': 'error',
        // 'no-debugger': 'error',
        // 'no-delete-var': 'error',
        // 'no-dupe-args': 'error',
        // 'no-dupe-class-members': 'error',
        // 'no-dupe-else-if': 'error',
        // 'no-dupe-keys': 'error',
        // 'no-duplicate-case': 'error',
        // 'no-empty': 'error',
        // 'no-empty-character-class': 'error',
        // 'no-empty-pattern': 'error',
        // 'no-ex-assign': 'error',
        // 'no-extra-boolean-cast': 'error',
        // 'no-extra-semi': 'error',
        // 'no-fallthrough': 'error',
        // 'no-func-assign': 'error',
        // 'no-global-assign': 'error',
        // 'no-import-assign': 'error',
        // 'no-inner-declarations': 'error',
        // 'no-invalid-regexp': 'error',
        // 'no-irregular-whitespace': 'error',
        // 'no-misleading-character-class': 'error',
        // 'no-mixed-spaces-and-tabs': 'error',
        // 'no-new-symbol': 'error',
        // 'no-obj-calls': 'error',
        // 'no-octal': 'error',
        // 'no-prototype-builtins': 'error',
        // 'no-redeclare': 'error',
        // 'no-regex-spaces': 'error',
        // 'no-self-assign': 'error',
        // 'no-setter-return': 'error',
        // 'no-shadow-restricted-names': 'error',
        // 'no-sparse-arrays': 'error',
        // 'no-this-before-super': 'error',
        // 'no-undef': 'error',
        // 'no-unexpected-multiline': 'error',
        // 'no-unreachable': 'error',
        // 'no-unsafe-finally': 'error',
        // 'no-unsafe-negation': 'error',
        // 'no-unused-labels': 'error',
        // 'no-unused-vars': 'off',
        // 'no-useless-catch': 'error',
        // 'no-useless-escape': 'error',
        // 'no-with': 'error',
        // 'require-yield': 'error',
        // 'use-isnan': 'error',
        // 'valid-typeof': 'error',
      },
    },
    {
      files: ['*.html'],
      extends: ['plugin:@angular-eslint/template/recommended'],
      rules: {
        'prettier/prettier': [
          'error',
          {
            bracketSpacing: true,
            printWidth: 100,
          },
        ],
      },
    },
    {
      files: ['*.component.ts'],
      extends: ['plugin:@angular-eslint/template/process-inline-templates'],
    },
  ],
};
